{"mappings":"ACIA,SAAS,EAAY,CAAI,SAGvB,AAAI,EAAK,QAAQ,CAAC,QACP,EAAK,KAAK,CAAC,EAAG,IAAM,QAKxB,CACT,CAEA,AAdmB,SAAS,gBAAgB,CAAC,eAclC,OAAO,CAAC,SAAA,CAAnB,EACE,EAAQ,kBAAkB,CAAC,cACzB,kCACI,MAAA,CAD8B,EAAQ,EAAE,CAAC,aACf,MAAA,CAA1B,EAAY,EAAQ,IAAI,EAAE,mBAGhC,EAAQ,YAAY,CAAC,cAClB,GAAqE,MAAA,CAAnE,EAAY,EAAQ,IAAI,CAAC,EAAE,CAAC,WAAW,GAAK,EAAQ,IAAI,CAAC,KAAK,CAAC,KACtE","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar inputsList = document.querySelectorAll(\".field-text\");\nfunction divideWords(word) {\n    var result;\n    if (word.includes(\"Name\")) {\n        result = word.slice(0, -4) + \" Name\";\n        return result;\n    }\n    return word;\n}\ninputsList.forEach(function(element) {\n    element.insertAdjacentHTML(\"beforebegin\", '<label class=\"field-label\" for='.concat(element.id, \">\\n      \").concat(divideWords(element.name), \"\\n    </label>\"));\n    element.setAttribute(\"placeholder\", \"\".concat(divideWords(element.name[0].toUpperCase() + element.name.slice(1))));\n});\n\n//# sourceMappingURL=index.833c2aee.js.map\n","'use strict';\n\nconst inputsList = document.querySelectorAll('.field-text');\n\nfunction divideWords(word) {\n  let result;\n\n  if (word.includes('Name')) {\n    result = word.slice(0, -4) + ' Name';\n\n    return result;\n  }\n\n  return word;\n}\n\ninputsList.forEach(element => {\n  element.insertAdjacentHTML('beforebegin',\n    `<label class=\"field-label\" for=${element.id}>\n      ${divideWords(element.name)}\n    </label>`);\n\n  element.setAttribute('placeholder',\n    `${divideWords(element.name[0].toUpperCase() + element.name.slice(1))}`);\n});\n"],"names":["divideWords","word","includes","slice","inputsList","document","querySelectorAll","forEach","element","insertAdjacentHTML","concat","id","name","setAttribute","toUpperCase"],"version":3,"file":"index.833c2aee.js.map"}